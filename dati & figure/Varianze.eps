%!PS-Adobe-2.0
%%Title: Varianze.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Fri Nov 19 11:45:55 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Varianze.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (elisa,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov 19 11:45:55 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
966 448 M
63 0 V
6017 0 R
-63 0 V
882 448 M
( 0) Rshow
1.000 UL
LTb
966 1554 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 0.05) Rshow
1.000 UL
LTb
966 2660 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 0.1) Rshow
1.000 UL
LTb
966 3766 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 0.15) Rshow
1.000 UL
LTb
966 4872 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 0.2) Rshow
1.000 UL
LTb
966 448 M
0 63 V
0 4361 R
0 -63 V
966 308 M
( 0) Cshow
1.000 UL
LTb
1726 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 1000) Cshow
1.000 UL
LTb
2486 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 2000) Cshow
1.000 UL
LTb
3246 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 3000) Cshow
1.000 UL
LTb
4006 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 4000) Cshow
1.000 UL
LTb
4766 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 5000) Cshow
1.000 UL
LTb
5526 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 6000) Cshow
1.000 UL
LTb
6286 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 7000) Cshow
1.000 UL
LTb
7046 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 8000) Cshow
1.000 UL
LTb
1.000 UL
LTb
966 4872 N
966 448 L
6080 0 V
0 4424 V
-6080 0 V
Z stroke
LCb setrgbcolor
308 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(Variance) Cshow
grestore
LTb
LCb setrgbcolor
4006 98 M
(q) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LTb
6395 4739 M
("RETICOLO_100SIM" u 1:3) Rshow
LT0
6479 4739 M
399 0 V
967 448 M
7 0 V
7 442 V
8 3318 V
7 -3096 V
8 -662 V
8 -2 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
967 448 Pls
974 448 Pls
981 890 Pls
989 4208 Pls
996 1112 Pls
1004 450 Pls
1012 448 Pls
1019 448 Pls
1027 448 Pls
1034 448 Pls
1042 448 Pls
1050 448 Pls
1057 448 Pls
1065 448 Pls
1072 448 Pls
1080 448 Pls
6678 4739 Pls
1.000 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
LTb
6395 4599 M
("MIX_d0_100SIM" u 1:3) Rshow
LT1
6479 4599 M
399 0 V
967 448 M
37 0 V
38 0 V
38 221 V
38 664 V
38 885 V
190 2212 V
1536 3102 L
190 -663 V
1916 1333 L
2106 890 L
2296 669 L
190 0 V
190 0 V
2866 448 L
190 221 V
190 221 V
3436 669 L
3626 449 L
190 -1 V
190 0 V
967 448 Crs
1004 448 Crs
1042 448 Crs
1080 669 Crs
1118 1333 Crs
1156 2218 Crs
1346 4430 Crs
1536 3102 Crs
1726 2439 Crs
1916 1333 Crs
2106 890 Crs
2296 669 Crs
2486 669 Crs
2676 669 Crs
2866 448 Crs
3056 669 Crs
3246 890 Crs
3436 669 Crs
3626 449 Crs
3816 448 Crs
4006 448 Crs
6678 4599 Crs
1.000 UP
1.000 UL
LT2
/Helvetica findfont 140 scalefont setfont
LTb
6395 4459 M
("MIX_d1_100SIM" u 1:3) Rshow
LT2
6479 4459 M
399 0 V
967 448 M
37 10 V
38 63 V
38 3 V
38 809 V
38 1094 V
190 1958 V
1536 2986 L
1726 1393 L
190 64 V
190 125 V
2296 854 L
190 68 V
2676 609 L
2866 506 L
190 126 V
3246 448 L
190 0 V
190 105 V
3816 448 L
190 336 V
967 448 Star
1004 458 Star
1042 521 Star
1080 524 Star
1118 1333 Star
1156 2427 Star
1346 4385 Star
1536 2986 Star
1726 1393 Star
1916 1457 Star
2106 1582 Star
2296 854 Star
2486 922 Star
2676 609 Star
2866 506 Star
3056 632 Star
3246 448 Star
3436 448 Star
3626 553 Star
3816 448 Star
4006 784 Star
6678 4459 Star
1.000 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
LTb
6395 4319 M
("MIX_d2_100SIM" u 1:3) Rshow
LT3
6479 4319 M
399 0 V
967 448 M
37 16 V
38 38 V
38 89 V
38 759 V
38 1336 V
190 1556 V
1536 2971 L
1726 1553 L
190 -149 V
2106 627 L
190 26 V
190 59 V
2676 470 L
190 331 V
3056 649 L
3246 449 L
190 40 V
190 139 V
3816 448 L
190 0 V
967 448 Box
1004 464 Box
1042 502 Box
1080 591 Box
1118 1350 Box
1156 2686 Box
1346 4242 Box
1536 2971 Box
1726 1553 Box
1916 1404 Box
2106 627 Box
2296 653 Box
2486 712 Box
2676 470 Box
2866 801 Box
3056 649 Box
3246 449 Box
3436 489 Box
3626 628 Box
3816 448 Box
4006 448 Box
6678 4319 Box
1.000 UP
1.000 UL
LT4
/Helvetica findfont 140 scalefont setfont
LTb
6395 4179 M
("RAN_d0_100SIM" u 1:3) Rshow
LT4
6479 4179 M
399 0 V
967 448 M
75 22 V
76 66 V
76 0 V
76 57 V
76 1095 V
380 2667 V
380 -390 V
2486 2757 L
380 -623 V
380 -439 V
380 209 V
4006 786 L
380 195 V
4766 622 L
380 369 V
380 73 V
5906 761 L
6286 580 L
380 17 V
380 396 V
967 448 BoxF
1042 470 BoxF
1118 536 BoxF
1194 536 BoxF
1270 593 BoxF
1346 1688 BoxF
1726 4355 BoxF
2106 3965 BoxF
2486 2757 BoxF
2866 2134 BoxF
3246 1695 BoxF
3626 1904 BoxF
4006 786 BoxF
4386 981 BoxF
4766 622 BoxF
5146 991 BoxF
5526 1064 BoxF
5906 761 BoxF
6286 580 BoxF
6666 597 BoxF
7046 993 BoxF
6678 4179 BoxF
1.000 UP
1.000 UL
LT5
/Helvetica findfont 140 scalefont setfont
LTb
6395 4039 M
("RAN_d1_100SIM" u 1:3) Rshow
LT5
6479 4039 M
399 0 V
967 448 M
75 24 V
76 31 V
76 40 V
76 793 V
76 379 V
380 2530 V
380 -437 V
380 -580 V
380 -488 V
3246 1699 L
380 680 V
4006 1275 L
380 -267 V
4766 736 L
380 682 V
5526 448 L
380 1 V
380 166 V
380 -30 V
380 165 V
967 448 Circle
1042 472 Circle
1118 503 Circle
1194 543 Circle
1270 1336 Circle
1346 1715 Circle
1726 4245 Circle
2106 3808 Circle
2486 3228 Circle
2866 2740 Circle
3246 1699 Circle
3626 2379 Circle
4006 1275 Circle
4386 1008 Circle
4766 736 Circle
5146 1418 Circle
5526 448 Circle
5906 449 Circle
6286 615 Circle
6666 585 Circle
7046 750 Circle
6678 4039 Circle
1.000 UP
1.000 UL
LT6
/Helvetica findfont 140 scalefont setfont
LTb
6395 3899 M
("RAN_d2_100SIM" u 1:3) Rshow
LT6
6479 3899 M
399 0 V
967 448 M
75 31 V
76 46 V
76 377 V
76 1603 V
76 -338 V
380 2203 V
2106 3331 L
2486 2320 L
380 -639 V
380 -540 V
380 265 V
4006 928 L
4386 770 L
4766 560 L
5146 448 L
380 372 V
5906 448 L
380 0 V
380 193 V
7046 448 L
967 448 CircleF
1042 479 CircleF
1118 525 CircleF
1194 902 CircleF
1270 2505 CircleF
1346 2167 CircleF
1726 4370 CircleF
2106 3331 CircleF
2486 2320 CircleF
2866 1681 CircleF
3246 1141 CircleF
3626 1406 CircleF
4006 928 CircleF
4386 770 CircleF
4766 560 CircleF
5146 448 CircleF
5526 820 CircleF
5906 448 CircleF
6286 448 CircleF
6666 641 CircleF
7046 448 CircleF
6678 3899 CircleF
1.000 UL
LTb
966 4872 N
966 448 L
6080 0 V
0 4424 V
-6080 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
