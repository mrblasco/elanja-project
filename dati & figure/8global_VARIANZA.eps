%!PS-Adobe-2.0
%%Title: 8global_VARIANZA.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Fri Nov 19 11:40:42 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (8global_VARIANZA.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (elisa,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov 19 11:40:42 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
882 448 M
63 0 V
6101 0 R
-63 0 V
798 448 M
( 0) Rshow
1.000 UL
LTb
882 890 M
63 0 V
6101 0 R
-63 0 V
798 890 M
( 0.1) Rshow
1.000 UL
LTb
882 1333 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.2) Rshow
1.000 UL
LTb
882 1775 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.3) Rshow
1.000 UL
LTb
882 2218 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.4) Rshow
1.000 UL
LTb
882 2660 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.5) Rshow
1.000 UL
LTb
882 3102 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.6) Rshow
1.000 UL
LTb
882 3545 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.7) Rshow
1.000 UL
LTb
882 3987 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.8) Rshow
1.000 UL
LTb
882 4430 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.9) Rshow
1.000 UL
LTb
882 4872 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 1) Rshow
1.000 UL
LTb
882 448 M
0 63 V
0 4361 R
0 -63 V
882 308 M
( 0) Cshow
1.000 UL
LTb
1652 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 1000) Cshow
1.000 UL
LTb
2423 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 2000) Cshow
1.000 UL
LTb
3193 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 3000) Cshow
1.000 UL
LTb
3964 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 4000) Cshow
1.000 UL
LTb
4734 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 5000) Cshow
1.000 UL
LTb
5505 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 6000) Cshow
1.000 UL
LTb
6275 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 7000) Cshow
1.000 UL
LTb
7046 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 8000) Cshow
1.000 UL
LTb
1.000 UL
LTb
882 4872 N
882 448 L
6164 0 V
0 4424 V
-6164 0 V
Z stroke
LCb setrgbcolor
308 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(<S_{max}>/L^{2}) Cshow
grestore
LTb
LCb setrgbcolor
3964 98 M
(q) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LTb
6395 4739 M
("RAN_d0_100SIM") Rshow
LT0
6479 4739 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
883 4872 M
-31 0 R
62 0 V
-62 0 R
62 0 V
45 -278 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
46 -210 R
0 35 V
-31 -35 R
62 0 V
-62 35 R
62 0 V
46 -64 R
0 35 V
-31 -35 R
62 0 V
-62 35 R
62 0 V
46 -99 R
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
46 -565 R
0 496 V
-31 -496 R
62 0 V
-62 496 R
62 0 V
1652 1513 M
0 1563 V
1621 1513 M
62 0 V
-62 1563 R
62 0 V
2038 1044 M
0 1407 V
2007 1044 M
62 0 V
-62 1407 R
62 0 V
2423 778 M
0 924 V
2392 778 M
62 0 V
-62 924 R
62 0 V
2808 636 M
0 674 V
2777 636 M
62 0 V
-62 674 R
62 0 V
3193 554 M
0 499 V
3162 554 M
62 0 V
-62 499 R
62 0 V
3579 566 M
0 582 V
3548 566 M
62 0 V
-62 582 R
62 0 V
3964 492 M
0 135 V
3933 492 M
62 0 V
-62 135 R
62 0 V
4349 510 M
0 213 V
4318 510 M
62 0 V
-62 213 R
62 0 V
4734 484 M
0 70 V
-31 -70 R
62 0 V
-62 70 R
62 0 V
355 -44 R
0 217 V
5089 510 M
62 0 V
-62 217 R
62 0 V
5505 512 M
0 247 V
5474 512 M
62 0 V
stroke 5536 512 M
-62 247 R
62 0 V
5890 500 M
0 125 V
5859 500 M
62 0 V
-62 125 R
62 0 V
6275 489 M
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
355 -56 R
0 60 V
-31 -60 R
62 0 V
-62 60 R
62 0 V
354 -54 R
0 218 V
7015 492 M
62 0 V
-62 218 R
62 0 V
883 4872 Pls
959 4598 Pls
1036 4410 Pls
1113 4381 Pls
1190 4329 Pls
1267 4041 Pls
1652 2294 Pls
2038 1748 Pls
2423 1240 Pls
2808 973 Pls
3193 803 Pls
3579 857 Pls
3964 559 Pls
4349 616 Pls
4734 519 Pls
5120 619 Pls
5505 635 Pls
5890 563 Pls
6275 515 Pls
6661 516 Pls
7046 601 Pls
6678 4739 Pls
1.000 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
LTb
6395 4599 M
("RAN_d1_100SIM") Rshow
LT1
6479 4599 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
883 4872 M
-31 0 R
62 0 V
-62 0 R
62 0 V
45 -277 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
46 -115 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
46 -169 R
0 38 V
-31 -38 R
62 0 V
-62 38 R
62 0 V
46 -376 R
0 355 V
-31 -355 R
62 0 V
-62 355 R
62 0 V
46 -608 R
0 507 V
-31 -507 R
62 0 V
-62 507 R
62 0 V
1652 1922 M
0 1518 V
1621 1922 M
62 0 V
-62 1518 R
62 0 V
2038 981 M
0 1344 V
2007 981 M
62 0 V
-62 1344 R
62 0 V
2423 737 M
0 1112 V
2392 737 M
62 0 V
-62 1112 R
62 0 V
2808 697 M
0 916 V
2777 697 M
62 0 V
-62 916 R
62 0 V
3193 570 M
0 500 V
3162 570 M
62 0 V
-62 500 R
62 0 V
3579 629 M
0 772 V
3548 629 M
62 0 V
-62 772 R
62 0 V
3964 527 M
0 331 V
3933 527 M
62 0 V
-62 331 R
62 0 V
4349 508 M
0 223 V
4318 508 M
62 0 V
-62 223 R
62 0 V
4734 491 M
0 115 V
4703 491 M
62 0 V
-62 115 R
62 0 V
355 -82 R
0 388 V
5089 524 M
62 0 V
-62 388 R
62 0 V
5505 479 M
-31 0 R
62 0 V
-62 0 R
62 0 V
stroke 5536 479 M
354 3 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
354 2 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
355 -68 R
0 55 V
-31 -55 R
62 0 V
-62 55 R
62 0 V
354 -42 R
0 121 V
7015 497 M
62 0 V
-62 121 R
62 0 V
883 4872 Crs
959 4599 Crs
1036 4500 Crs
1113 4361 Crs
1190 4182 Crs
1267 4005 Crs
1652 2681 Crs
2038 1653 Crs
2423 1293 Crs
2808 1155 Crs
3193 820 Crs
3579 1015 Crs
3964 693 Crs
4349 620 Crs
4734 549 Crs
5120 718 Crs
5505 479 Crs
5890 483 Crs
6275 518 Crs
6661 512 Crs
7046 558 Crs
6678 4599 Crs
1.000 UP
1.000 UL
LT2
/Helvetica findfont 140 scalefont setfont
LTb
6395 4459 M
("RAN_d2_100SIM") Rshow
LT2
6479 4459 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
883 4872 M
-31 0 R
62 0 V
-62 0 R
62 0 V
45 -327 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
46 -162 R
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
46 -302 R
0 182 V
-31 -182 R
62 0 V
-62 182 R
62 0 V
46 -1008 R
0 822 V
-31 -822 R
62 0 V
-62 822 R
62 0 V
46 -647 R
0 688 V
-31 -688 R
62 0 V
-62 688 R
62 0 V
1652 1510 M
0 1569 V
1621 1510 M
62 0 V
-62 1569 R
62 0 V
2038 762 M
0 1153 V
2007 762 M
62 0 V
-62 1153 R
62 0 V
2423 643 M
0 749 V
2392 643 M
62 0 V
-62 749 R
62 0 V
2808 536 M
0 493 V
2777 536 M
62 0 V
-62 493 R
62 0 V
3193 544 M
0 277 V
3162 544 M
62 0 V
-62 277 R
62 0 V
3579 544 M
0 383 V
3548 544 M
62 0 V
-62 383 R
62 0 V
3964 531 M
0 191 V
3933 531 M
62 0 V
-62 191 R
62 0 V
4349 489 M
0 129 V
4318 489 M
62 0 V
-62 129 R
62 0 V
4734 485 M
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
355 -53 R
-31 0 R
62 0 V
-62 0 R
62 0 V
354 14 R
0 149 V
5474 491 M
62 0 V
-62 149 R
62 0 V
stroke 5536 640 M
5890 478 M
-31 0 R
62 0 V
-62 0 R
62 0 V
354 -1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
355 20 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
354 -96 R
-31 0 R
62 0 V
-62 0 R
62 0 V
883 4872 Star
959 4551 Star
1036 4411 Star
1113 4215 Star
1190 3709 Star
1267 3817 Star
1652 2295 Star
2038 1338 Star
2423 1017 Star
2808 782 Star
3193 683 Star
3579 736 Star
3964 626 Star
4349 553 Star
4734 508 Star
5120 477 Star
5505 566 Star
5890 478 Star
6275 477 Star
6661 535 Star
7046 478 Star
6678 4459 Star
1.000 UL
LTb
882 4872 N
882 448 L
6164 0 V
0 4424 V
-6164 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
